// These functions draw the pokemon, facing right or left 
// depending on whether it belongs to the player or rival
function void rivalVenusaur(int location) {
	var int memAddress; 
	let memAddress = 16384+location;
	do Memory.poke(memAddress, -8192);
	do Memory.poke(memAddress +32, 6144);
	do Memory.poke(memAddress +64, -31744);
	do Memory.poke(memAddress +96, 25088);
	do Memory.poke(memAddress +128, -26112);
	do Memory.poke(memAddress +160, 1792);
	do Memory.poke(memAddress +192, 640);
	do Memory.poke(memAddress +224, 2000);
	do Memory.poke(memAddress +256, 14696);
	do Memory.poke(memAddress +288, -12856);
	do Memory.poke(memAddress +320, -25080);
	do Memory.poke(memAddress +352, -8188);
	do Memory.poke(memAddress +384, 2);
	do Memory.poke(memAddress +416, -32765);
	do Memory.poke(memAddress +448, -16381);
	do Memory.poke(memAddress +480, 3073);
	do Memory.poke(memAddress +512, 1538);
	do Memory.poke(memAddress +544, -32506);
	do Memory.poke(memAddress +576, -16348);
	do Memory.poke(memAddress +608, 28696);
	do Memory.poke(memAddress +640, -28704);
	do Memory.poke(memAddress +1, 30);
	do Memory.poke(memAddress +33, 97);
	do Memory.poke(memAddress +65, 131);
	do Memory.poke(memAddress +97, 316);
	do Memory.poke(memAddress +129, 457);
	do Memory.poke(memAddress +161, 260);
	do Memory.poke(memAddress +193, 260);
	do Memory.poke(memAddress +225, 386);
	do Memory.poke(memAddress +257, 894);
	do Memory.poke(memAddress +289, 1221);
	do Memory.poke(memAddress +321, 1686);
	do Memory.poke(memAddress +353, 1371);
	do Memory.poke(memAddress +385, 1378);
	do Memory.poke(memAddress +417, 907);
	do Memory.poke(memAddress +449, 273);
	do Memory.poke(memAddress +481, 149);
	do Memory.poke(memAddress +513, 104);
	do Memory.poke(memAddress +545, 8);
	do Memory.poke(memAddress +577, 16);
	do Memory.poke(memAddress +609, 16);
	do Memory.poke(memAddress +641, 8);
	do Memory.poke(memAddress +673, 7);
	return;
}
function void playerVenusaur(int location) {
	var int memAddress; 
	let memAddress = 16384+location;
	do Memory.poke(memAddress, 15296);
	do Memory.poke(memAddress +32, -15312);
	do Memory.poke(memAddress +64, 3592);
	do Memory.poke(memAddress +96, 12772);
	do Memory.poke(memAddress +128, -13156);
	do Memory.poke(memAddress +160, 260);
	do Memory.poke(memAddress +192, 260);
	do Memory.poke(memAddress +224, 524);
	do Memory.poke(memAddress +256, -7178);
	do Memory.poke(memAddress +288, -25319);
	do Memory.poke(memAddress +320, -13493);
	do Memory.poke(memAddress +352, 16085);
	do Memory.poke(memAddress +384, 565);
	do Memory.poke(memAddress +416, 3726);
	do Memory.poke(memAddress +448, 7236);
	do Memory.poke(memAddress +480, -31416);
	do Memory.poke(memAddress +512, 176);
	do Memory.poke(memAddress +544, 2176);
	do Memory.poke(memAddress +576, 6208);
	do Memory.poke(memAddress +608, 28736);
	do Memory.poke(memAddress +640, -30592);
	do Memory.poke(memAddress +672, 1792);
	do Memory.poke(memAddress +65, 1);
	do Memory.poke(memAddress +97, 2);
	do Memory.poke(memAddress +129, 2);
	do Memory.poke(memAddress +161, 7);
	do Memory.poke(memAddress +193, 10);
	do Memory.poke(memAddress +225, 95);
	do Memory.poke(memAddress +257, 180);
	do Memory.poke(memAddress +289, 157);
	do Memory.poke(memAddress +321, 131);
	do Memory.poke(memAddress +353, 256);
	do Memory.poke(memAddress +385, 512);
	do Memory.poke(memAddress +417, 1536);
	do Memory.poke(memAddress +449, 1536);
	do Memory.poke(memAddress +481, 1025);
	do Memory.poke(memAddress +513, 515);
	do Memory.poke(memAddress +545, 772);
	do Memory.poke(memAddress +577, 288);
	do Memory.poke(memAddress +609, 192);
	do Memory.poke(memAddress +641, 63);
	return;
}
function void rivalCharizard(int location) {
	var int memAddress; 
	let memAddress = 16384+location;
	do Memory.poke(memAddress +32, 28864);
	do Memory.poke(memAddress +64, -30560);
	do Memory.poke(memAddress +96, 6304);
	do Memory.poke(memAddress +128, 13392);
	do Memory.poke(memAddress +160, 21072);
	do Memory.poke(memAddress +192, -30232);
	do Memory.poke(memAddress +224, -25464);
	do Memory.poke(memAddress +256, 24580);
	do Memory.poke(memAddress +288, 4);
	do Memory.poke(memAddress +320, 3172);
	do Memory.poke(memAddress +352, 5154);
	do Memory.poke(memAddress +384, 8721);
	do Memory.poke(memAddress +416, -11895);
	do Memory.poke(memAddress +448, -24478);
	do Memory.poke(memAddress +480, 4124);
	do Memory.poke(memAddress +512, 2048);
	do Memory.poke(memAddress +544, -30720);
	do Memory.poke(memAddress +576, 28672);
	do Memory.poke(memAddress +1, 384);
	do Memory.poke(memAddress +33, 1692);
	do Memory.poke(memAddress +65, 2339);
	do Memory.poke(memAddress +97, 4674);
	do Memory.poke(memAddress +129, 9602);
	do Memory.poke(memAddress +161, 9732);
	do Memory.poke(memAddress +193, 10254);
	do Memory.poke(memAddress +225, 12313);
	do Memory.poke(memAddress +257, 8232);
	do Memory.poke(memAddress +289, 15872);
	do Memory.poke(memAddress +321, 8608);
	do Memory.poke(memAddress +353, 4130);
	do Memory.poke(memAddress +385, 4133);
	do Memory.poke(memAddress +417, 3088);
	do Memory.poke(memAddress +449, 1049);
	do Memory.poke(memAddress +481, 1063);
	do Memory.poke(memAddress +513, 545);
	do Memory.poke(memAddress +545, 528);
	do Memory.poke(memAddress +577, 264);
	do Memory.poke(memAddress +609, 264);
	do Memory.poke(memAddress +641, 240);
	return;
}
function void rivalCharizard(int location) {
	var int memAddress; 
	let memAddress = 16384+location;
	do Memory.poke(memAddress, 96);
	do Memory.poke(memAddress +32, -29096);
	do Memory.poke(memAddress +64, 28964);
	do Memory.poke(memAddress +96, 4242);
	do Memory.poke(memAddress +128, 4201);
	do Memory.poke(memAddress +160, -30695);
	do Memory.poke(memAddress +192, 23557);
	do Memory.poke(memAddress +224, 26115);
	do Memory.poke(memAddress +256, -31487);
	do Memory.poke(memAddress +288, 31);
	do Memory.poke(memAddress +320, 353);
	do Memory.poke(memAddress +352, 4354);
	do Memory.poke(memAddress +384, 10498);
	do Memory.poke(memAddress +416, -15860);
	do Memory.poke(memAddress +448, 26120);
	do Memory.poke(memAddress +480, 14600);
	do Memory.poke(memAddress +512, 8464);
	do Memory.poke(memAddress +544, 16912);
	do Memory.poke(memAddress +576, -31712);
	do Memory.poke(memAddress +608, 1056);
	do Memory.poke(memAddress +640, 960);
	do Memory.poke(memAddress +33, 195);
	do Memory.poke(memAddress +65, 324);
	do Memory.poke(memAddress +97, 326);
	do Memory.poke(memAddress +129, 651);
	do Memory.poke(memAddress +161, 658);
	do Memory.poke(memAddress +193, 1508);
	do Memory.poke(memAddress +225, 1102);
	do Memory.poke(memAddress +257, 2049);
	do Memory.poke(memAddress +289, 2048);
	do Memory.poke(memAddress +321, 2444);
	do Memory.poke(memAddress +353, 4362);
	do Memory.poke(memAddress +385, 8721);
	do Memory.poke(memAddress +417, 9314);
	do Memory.poke(memAddress +449, 4481);
	do Memory.poke(memAddress +481, 3586);
	do Memory.poke(memAddress +513, 4);
	do Memory.poke(memAddress +545, 4);
	do Memory.poke(memAddress +577, 3);
	return;
}
function void playerCharizard(int location) {
	var int memAddress; 
	let memAddress = 16384+location;
	do Memory.poke(memAddress, 96);
	do Memory.poke(memAddress +32, -29096);
	do Memory.poke(memAddress +64, 28964);
	do Memory.poke(memAddress +96, 4242);
	do Memory.poke(memAddress +128, 4201);
	do Memory.poke(memAddress +160, -30695);
	do Memory.poke(memAddress +192, 23557);
	do Memory.poke(memAddress +224, 26115);
	do Memory.poke(memAddress +256, -31487);
	do Memory.poke(memAddress +288, 31);
	do Memory.poke(memAddress +320, 353);
	do Memory.poke(memAddress +352, 4354);
	do Memory.poke(memAddress +384, 10498);
	do Memory.poke(memAddress +416, -15860);
	do Memory.poke(memAddress +448, 26120);
	do Memory.poke(memAddress +480, 14600);
	do Memory.poke(memAddress +512, 8464);
	do Memory.poke(memAddress +544, 16912);
	do Memory.poke(memAddress +576, -31712);
	do Memory.poke(memAddress +608, 1056);
	do Memory.poke(memAddress +640, 960);
	do Memory.poke(memAddress +33, 195);
	do Memory.poke(memAddress +65, 324);
	do Memory.poke(memAddress +97, 326);
	do Memory.poke(memAddress +129, 651);
	do Memory.poke(memAddress +161, 658);
	do Memory.poke(memAddress +193, 1508);
	do Memory.poke(memAddress +225, 1102);
	do Memory.poke(memAddress +257, 2049);
	do Memory.poke(memAddress +289, 2048);
	do Memory.poke(memAddress +321, 2444);
	do Memory.poke(memAddress +353, 4362);
	do Memory.poke(memAddress +385, 8721);
	do Memory.poke(memAddress +417, 9314);
	do Memory.poke(memAddress +449, 4481);
	do Memory.poke(memAddress +481, 3586);
	do Memory.poke(memAddress +513, 4);
	do Memory.poke(memAddress +545, 4);
	do Memory.poke(memAddress +577, 3);
	return;
}
function void rivalBlastoise(int location) {
	var int memAddress; 
	let memAddress = 16384+location;
	do Memory.poke(memAddress, 192);
	do Memory.poke(memAddress +32, 352);
	do Memory.poke(memAddress +64, -29152);
	do Memory.poke(memAddress +96, 29016);
	do Memory.poke(memAddress +128, -24344);
	do Memory.poke(memAddress +160, -25208);
	do Memory.poke(memAddress +192, 4612);
	do Memory.poke(memAddress +224, 2050);
	do Memory.poke(memAddress +256, -15230);
	do Memory.poke(memAddress +288, -1855);
	do Memory.poke(memAddress +320, 6241);
	do Memory.poke(memAddress +352, 5121);
	do Memory.poke(memAddress +384, 2562);
	do Memory.poke(memAddress +416, -31348);
	do Memory.poke(memAddress +448, 17008);
	do Memory.poke(memAddress +480, 9824);
	do Memory.poke(memAddress +512, -2848);
	do Memory.poke(memAddress +544, 11008);
	do Memory.poke(memAddress +576, 15360);
	do Memory.poke(memAddress +608, 16384);
	do Memory.poke(memAddress +640, -16384);
	do Memory.poke(memAddress +65, 1);
	do Memory.poke(memAddress +97, 2);
	do Memory.poke(memAddress +129, 5);
	do Memory.poke(memAddress +161, 5);
	do Memory.poke(memAddress +193, 2);
	do Memory.poke(memAddress +225, 5);
	do Memory.poke(memAddress +257, 4);
	do Memory.poke(memAddress +289, 120);
	do Memory.poke(memAddress +321, 73);
	do Memory.poke(memAddress +353, 41);
	do Memory.poke(memAddress +385, 25);
	do Memory.poke(memAddress +417, 6);
	do Memory.poke(memAddress +449, 4);
	do Memory.poke(memAddress +481, 8);
	do Memory.poke(memAddress +513, 8);
	do Memory.poke(memAddress +545, 4);
	do Memory.poke(memAddress +577, 4);
	do Memory.poke(memAddress +609, 2);
	do Memory.poke(memAddress +641, 1);
	return;
}
function void playerBlastoise(int location) {
	var int memAddress; 
	let memAddress = 16384+location;
	do Memory.poke(memAddress, ~32767);
	do Memory.poke(memAddress +32, 16384);
	do Memory.poke(memAddress +64, 14528);
	do Memory.poke(memAddress +96, 18208);
	do Memory.poke(memAddress +128, -32048);
	do Memory.poke(memAddress +160, -9008);
	do Memory.poke(memAddress +192, 9248);
	do Memory.poke(memAddress +224, 2128);
	do Memory.poke(memAddress +256, -28272);
	do Memory.poke(memAddress +288, -28785);
	do Memory.poke(memAddress +320, 3145);
	do Memory.poke(memAddress +352, 5194);
	do Memory.poke(memAddress +384, 10316);
	do Memory.poke(memAddress +416, -12112);
	do Memory.poke(memAddress +448, 8464);
	do Memory.poke(memAddress +480, 12808);
	do Memory.poke(memAddress +512, -26744);
	do Memory.poke(memAddress +544, 27152);
	do Memory.poke(memAddress +576, 7696);
	do Memory.poke(memAddress +608, 288);
	do Memory.poke(memAddress +640, 448);
	do Memory.poke(memAddress +1, 1);
	do Memory.poke(memAddress +33, 3);
	do Memory.poke(memAddress +65, 2);
	do Memory.poke(memAddress +97, 13);
	do Memory.poke(memAddress +129, 11);
	do Memory.poke(memAddress +161, 8);
	do Memory.poke(memAddress +193, 16);
	do Memory.poke(memAddress +225, 32);
	do Memory.poke(memAddress +257, 32);
	do Memory.poke(memAddress +289, 65);
	do Memory.poke(memAddress +321, 67);
	do Memory.poke(memAddress +353, 64);
	do Memory.poke(memAddress +385, 32);
	do Memory.poke(memAddress +417, 24);
	do Memory.poke(memAddress +449, 7);
	do Memory.poke(memAddress +481, 3);
	do Memory.poke(memAddress +513, 3);
	return;
}
