class Pbattle {
    static Pbattle instance;
    field Pokemon usrPokemon;
    field Array usrMoves;
    field Pokemon cmpPokemon;
    field Array cmpMoves;
    field boolean exit;
    field TypeChart typeChart;
    field MoveManager moveManager;
    field Damage dmgCalc;
    field Rival rival;
    field BetterSpriteFunctions sprFnc;

    constructor Pbattle new() {
        do Screen.clearScreen();
        let exit = false;

        let usrMoves = Array.new(2);
        let moveManager = MoveManager.new();
        let usrMoves[0] = moveManager.getMove("Energy Ball");
        let usrMoves[1] = moveManager.getMove("Sludge Bomb");
        let usrPokemon = Pokemon.new("Venusaur", "Grass", "Poison", 80, 80, 82, 83, 100, 100, 80, usrMoves);
        let cmpMoves = Array.new(2);
        let cmpMoves[0] = moveManager.getMove("Surf");
        let cmpMoves[1] = moveManager.getMove("Brick Break");
        let cmpPokemon = Pokemon.new("Blastoise", "Water", null, 79, 79, 83, 100, 85, 105, 78, cmpMoves);

        let typeChart = TypeChart.new();
        let dmgCalc = Damage.new();

        let rival = Rival.new(cmpPokemon);

        let sprFnc = BetterSpriteFunctions.new();
        do sprFnc.drawPlayerMon("Venusaur");
        do sprFnc.drawRivalMon("Blastoise");

        return this;
    }

    function void newInstance() {
        let instance = Pbattle.new();
        return;
    }

    method void run(){
        var char key;
        var String move;
        var int damage;
        var int cmpHp;
        var String rMove;
        var int cmpDamage;
        var int usrHp;

        while(~exit){
            while ((key = 0) & (~exit)) {
                let key = Keyboard.keyPressed();
                do Sys.wait(50);
            }

            if (key = 49){
                let move = usrPokemon.getMove(1);
                let damage = Damage.calculateDamage(usrPokemon,move,cmpPokemon);
                let cmpHp = usrPokemon.getCurrentHP() - damage;
                do cmpPokemon.setCurrentHP(cmpHp);
            }

            if (key = 50){
                let move = usrPokemon.getMove(1);
                let damage = Damage.calculateDamage(usrPokemon,move,cmpPokemon);
                let cmpHp = cmpPokemon.getCurrentHP() - damage;
                do cmpPokemon.setCurrentHP(cmpHp);
            }

            let rMove = Rival.chooseBestMove(cmpPokemon,usrPokemon);
            let cmpDamage = Damage.calculateDamage(usrPokemon,move,cmpPokemon);
            let usrHp = usrPokemon.getCurrentHP() - cmpDamage;
            do usrPokemon.setCurrentHP(usrHp);

            if (usrHp = 0) {
                let exit = true;
            }

            if (cmpHp = 0) {
                let exit = true;
            }

            if (key = 140){
                let exit = true;
            }
        }

        return;
    }
}
