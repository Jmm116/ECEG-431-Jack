class Move {
    field String name;
    field String type;
    field String cat;

    constructor Move new(String moveName, String moveType, String moveCat) {
        let name = moveName;
        let type = moveType;
        let cat = moveCat;
        return this;
    }    
    // Move name
    method String getName() {
        return name;
    }
    // Move type (fire/water/grass/etc.)
    method String getType() {
        return type;
    }
    // Move category (special/physical)
    method String getCat() {
        return cat;
    }
}

class MoveManager {
    field Array allMoves;
    // All base power/acc are set to 80/100 
    constructor MoveManager new() {
        let allMoves = Array.new(18);
        // Grass
        let allMoves[0] = Move.new("Energy Ball", "Grass", "Special");
        let allMoves[1] = Move.new("Seed Bomb", "Grass", "Physical");
        // Poison
        let allMoves[2] = Move.new("Sludge Bomb", "Poison", "Special");
        let allMoves[3] = Move.new("Poison Jab", "Poison", "Physical");
        // Water
        let allMoves[4] = Move.new("Surf", "Water", "Special");
        // Psychic
        let allMoves[5] = Move.new("Psychic", "Psychic", "Special");
        // Fire
        let allMoves[6] = Move.new("Flamethrower", "Fire", "Special");
        let allMoves[7] = Move.new("Flare Blitz", "Fire", "Physical");
        // Ground
        let allMoves[8] = Move.new("Earthquake", "Ground", "Physical");
        // Fighting
        let allMoves[9] = Move.new("Brick Break", "Fighting", "Physical");
        // Rock
        let allMoves[10] = Move.new("Power Gem", "Rock", "Special");
        let allMoves[11] = Move.new("Stone Edge", "Rock", "Physical");
        // Flying
        let allMoves[12] = Move.new("Hurricane", "Flying", "Special");
        let allMoves[13] = Move.new("Aerial Ace", "Flying", "Physical");
        // Normal
        let allMoves[14] = Move.new("Swift", "Normal", "Special")
        let allMoves[15] = Move.new("Slash", "Normal", "Physical")
        // Electric
        let allMoves[16] = Move.new("Thunderbolt", "Electric", "Special");
        let allMoves[17] = Move.new("Thunder Fang", "Electric", "Physical");
        return this;
    }
    // Gets the move
    function Move getMove(String moveName) {
        var int i;
        for (let i = 0; i < allMoves.length(); i = i + 1) {
            if (allMoves[i].getName() = moveName) {
                return allMoves[i];
            }
        }
        return null; 
    }
}

class Pokemon {
    field String name;
    field String primaryType;
    field String secondaryType; 
    field int maxHP;
    field int attack;
    field int defense;
    field int spAttack;
    field int spDefense;
    field int speed;
    field Array moves;

    constructor Pokemon new(String pokemonName, String type1, String type2, int hp, int atk, int def, int spAtk, int spDef, int spd, Array pokemonMoves) {
        let name = pokemonName;
        let primaryType = type1;
        let secondaryType = type2; 
        let maxHP = hp;
        let attack = atk;
        let defense = def;
        let spAttack = spAtk;
        let spDefense = spDef;
        let speed = spd;
        let moves = pokemonMoves;
        return this;
    }
    // Pikachu
    method String getName() {
        return name;
    }
    // Electric
    method String getPrimaryType() {
        return primaryType;
    }
    // null (for Pikachu, others could have one)
    method String getSecondaryType() {
        return secondaryType;
    }
    // The hp will get updated
    method int getCurrentHP() {
        return currentHP;
    }
    // This updates the hp
    method void setCurrentHP(int newHP) {
        let currentHP = newHP;
    }
    // These is for physical moves
    method int getAttack() {
        return attack;
    }
    method int getDefense() {
        return defense;
    }
    // These are for special moves
    method int getSpAttack() {
        return spAttack;
    }
    method int getSpDefense() {
        return spDefense;
    }
    // This decides turn order, a tie is a 50/50
    method int getSpeed() {
        return speed;
    }
    // This is the list of moves
    method Array getMoves() {
        return moves;
    }
    // This gets the moves from the list
    method Move getMove(int index) {
        return moves[index];
    }
}

class TeamBuilder {

    field MoveManager moveManager;

    constructor TeamBuilder new(MoveManager mManager) {
        let moveManager = mManager;
        return this;
    }
    // All lvl 100, no EVs or IVs
    function Pokemon createPokemon(String name) {
        var Array moves;
        var Pokemon pokemon;
        // Team Green
        if (name = "Venusaur") {
            let moves = Array.new(2);
            let moves[0] = moveManager.getMove("Energy Ball");
            let moves[1] = moveManager.getMove("Sludge Bomb");
            let pokemon = Pokemon.new("Venusaur", "Grass", "Poison", 80, 82, 83, 100, 100, 80, moves);
        } else if (name = "Golduck") {
            let moves = Array.new(2);
            let moves[0] = moveManager.getMove("Surf");
            let moves[1] = moveManager.getMove("Thunderbolt");
            let pokemon = Pokemon.new("Golduck", "Water", null, 80, 82, 78, 95, 80, 85, moves);
        } else if (name = "Flareon") {
            let moves = Array.new(2);
            let moves[0] = moveManager.getMove("Flare Blitz");
            let moves[1] = moveManager.getMove("Earthquake");
            let pokemon = Pokemon.new("Flareon", "Fire", null, 65, 130, 60, 95, 110, 65, moves);
        } else if (name = "Machamp") {
            let moves = Array.new(2);
            let moves[0] = moveManager.getMove("Brick Break");
            let moves[1] = moveManager.getMove("Stone Edge");
            let pokemon = Pokemon.new("Machamp", "Fighting", null, 90, 130, 80, 65, 85, 55, moves);
        } else if (name = "Jynx") {
            let moves = Array.new(2);
            let moves[0] = moveManager.getMove("Ice Beam");
            let moves[1] = moveManager.getMove("Psychic");
            let pokemon = Pokemon.new("Jynx", "Ice", "Pychic", 65, 50, 35, 115, 95, 95, moves);
        } else if (name = "Fearow") {
            let moves = Array.new(2);
            let moves[0] = moveManager.getMove("Aerial Ace");
            let moves[1] = moveManager.getMove("Slash");
            let pokemon = Pokemon.new("Fearow", "Normal", "Flying", 65, 90, 65, 61, 61, 100, moves);
        // Team Red
        } else if (name = "Charizard") {
            let moves = Array.new(2);
            let moves[0] = moveManager.getMove("Flamethrower");
            let moves[1] = moveManager.getMove("Hurricane");
            let pokemon = Pokemon.new("Charizard", "Fire", "Flying", 78, 84, 78, 109, 85, 100, moves);
        } else if (name = "Vaporeon") {
            let moves = Array.new(2);
            let moves[0] = moveManager.getMove("Surf");
            let moves[1] = moveManager.getMove("Ice Beam");
            let pokemon = Pokemon.new("Vaporeon", "Water", null, 130, 65, 60, 110, 95, 65, moves);
        } else if (name = "Sandslash") {
            let moves = Array.new(2);
            let moves[0] = moveManager.getMove("Earthquake");
            let moves[1] = moveManager.getMove("Brick Break");
            let pokemon = Pokemon.new("Sandslash", "Ground", null, 75, 100, 110, 45, 55, 65, moves);
        } else if (name = "Alakazam") {
            let moves = Array.new(2);
            let moves[0] = moveManager.getMove("Psychic");
            let moves[1] = moveManager.getMove("Thunderbolt");
            let pokemon = Pokemon.new("Alakazam", "Psychic", null, 55, 50, 45, 135, 85, 120, moves);
        } else if (name = "Persian") {
            let moves = Array.new(2);
            let moves[0] = moveManager.getMove("Slash");
            let moves[1] = moveManager.getMove("Power Gem");
            let pokemon = Pokemon.new("Persian", "Normal", null, 65, 70, 60, 65, 65, 115, moves);
        } else if (name = "Victreebel") {
            let moves = Array.new(2);
            let moves[0] = moveManager.getMove("Seed Bomb");
            let moves[1] = moveManager.getMove("Poison Jab");
            let pokemon = Pokemon.new("Victreebel", "Grass", "Poison", 80, 105, 65, 100, 70, 70, moves);
        // Team Blue
        } else if (name = "Blastoise") {
            let moves = Array.new(2);
            let moves[0] = moveManager.getMove("Surf");
            let moves[1] = moveManager.getMove("Brick Break");
            let pokemon = Pokemon.new("Blastoise", "Water", null, 79, 83, 100, 85, 105, 78, moves);
        } else if (name = "Arcanine") {
            let moves = Array.new(2);
            let moves[0] = moveManager.getMove("Flamethrower");
            let moves[1] = moveManager.getMove("Thunder Fang");
            let pokemon = Pokemon.new("Arcanine", "Fire", null, 90, 110, 80, 100, 80, 95, moves);
        } else if (name = "Exeggutor") {
            let moves = Array.new(2);
            let moves[0] = moveManager.getMove("Energy Ball");
            let moves[1] = moveManager.getMove("Psychic");
            let pokemon = Pokemon.new("Exeggutor", "Grass", "Psychic", 95, 95, 85, 125, 75, 55, moves);
        } else if (name = "Nidoking") {
            let moves = Array.new(2);
            let moves[0] = moveManager.getMove("Earthquake");
            let moves[1] = moveManager.getMove("Poison Jab");
            let pokemon = Pokemon.new("Nidoking", "Poison", "Ground", 81, 102, 77, 85, 75, 85, moves);
        } else if (name = "Jolteon") {
            let moves = Array.new(2);
            let moves[0] = moveManager.getMove("Thunderbolt");
            let moves[1] = moveManager.getMove("Power Gem");
            let pokemon = Pokemon.new("Jolteon", "Electric", null, 81, 102, 77, 85, 75, 85, moves);
        } else if (name = "Pidgeot") {
            let moves = Array.new(2);
            let moves[0] = moveManager.getMove("Hurricane");
            let moves[1] = moveManager.getMove("Swift");
            let pokemon = Pokemon.new("Pidgeot", "Normal", "Flying", 83, 80, 75, 70, 70, 101, moves);
        } else {
            return null;
        }

        return pokemon;
    }

    function Array createPlayerTeam(String starter) {
        var Array playerteam;
        let playerteam = Array.new(6);
        // Player's team
        if (starter = "Venusaur") {
            let team[0] = createPokemon("Venusaur");
            let team[1] = createPokemon("Golduck");
            let team[2] = createPokemon("Flareon");
            let team[3] = createPokemon("Machamp");
            let team[4] = createPokemon("Jynx");
            let team[5] = createPokemon("Fearow");
        } else if (starter = "Blastoise") {
            let team[0] = createPokemon("Blastoise");
            let team[1] = createPokemon("Exeguttor");
            let team[2] = createPokemon("Arcanine");
            let team[3] = createPokemon("Nidoking");
            let team[4] = createPokemon("Jolteon");
            let team[5] = createPokemon("Pidgeot");
        } else if (starter = "Charizard") {
            let team[0] = createPokemon("Charizard");
            let team[1] = createPokemon("Vaporeon");
            let team[2] = createPokemon("Victreebel");
            let team[3] = createPokemon("Alakazam");
            let team[4] = createPokemon("Persian");
            let team[5] = createPokemon("Sandslash");
        } else {
            return null;
        }

        return playerteam;
    }

    function Array createRivalTeam(String starter) {
        var Array rivalteam;
        let rivalteam = Array.new(6);
        // Rival's team
        if (starter = "Blastoise") {
            let team[0] = createPokemon("Venusaur");
            let team[1] = createPokemon("Golduck");
            let team[2] = createPokemon("Flareon");
            let team[3] = createPokemon("Machamp");
            let team[4] = createPokemon("Jynx");
            let team[5] = createPokemon("Fearow");
        } else if (starter = "Charizard") {
            let team[0] = createPokemon("Blastoise");
            let team[1] = createPokemon("Exeguttor");
            let team[2] = createPokemon("Arcanine");
            let team[3] = createPokemon("Nidoking");
            let team[4] = createPokemon("Jolteon");
            let team[5] = createPokemon("Pidgeot");
        } else if (starter = "Venusaur") {
            let team[0] = createPokemon("Charizard");
            let team[1] = createPokemon("Vaporeon");
            let team[2] = createPokemon("Victreebel");
            let team[3] = createPokemon("Alakazam");
            let team[4] = createPokemon("Persian");
            let team[5] = createPokemon("Sandslash");
        } else {
            return null;
        }

        return rivalteam;
    }
}


class TypeChart {
    // Type chart calculator - no bug/ghost/fairy/steel/dark/dragon
    function int getTypeEffectiveness(String moveType, String defenderType1, String defenderType2) {
        // Default modifier as an integer
        var int effectiveness = 10;        
        // Calculate against the first type
        let effectiveness = effectiveness * checkTypeMatch(moveType, defenderType1);
        // Calculate against the second type, if it exists
        if (defenderType2 != null) {
            let effectiveness = effectiveness * checkTypeMatch(moveType, defenderType2);
        }
        return effectiveness
    }

    function int checkTypeMatch(String attackType, String defendType) {
        // The modifier is an integer which will be scaled back down later
        if (attackType = "Fire") {
            if (defendType = "Fire") {
                return 5;
            } else if (defendType = "Grass") {
                return 200;
            } else if (defendType = "Water") {
                return 5;
            } else if (defendType = "Rock") {
                return 5;
            } else if (defendType = "Ice") {
                return 20;
            } else {
                return 10;
            }
        } else if (attackType = "Water") {
            if (defendType = "Fire") {
                return 20;
            } else if (defendType = "Grass") {
                return 5;
            } else if (defendType = "Water") {
                return 5;
            } else if (defendType = "Rock") {
                return 20;
            } else if (defendType = "Ground") {
                return 20;
            } else {
                return 10;
            }
        } else if (attackType = "Grass") {
            if (defendType = "Fire") {
                return 5;
            } else if (defendType = "Grass") {
                return 5;
            } else if (defendType = "Water") {
                return 20;
            } else if (defendType = "Rock") {
                return 20;
            } else if (defendType = "Ground") {
                return 20;
            } else if (defendType = "Poison") {
                return 5;
            } else if (defendType = "Flying") {
                return 5;
            } else {
                return 10;
            }
        } else if (attackType = "Rock") {
            if (defendType = "Fire") {
                return 20;
            } else if (defendType = "Ice") {
                return 20;
            } else if (defendType = "Fighting") {
                return 5;
            } else if (defendType = "Ground") {
                return 5;
            } else if (defendType = "Flying") {
                return 20;
            } else {
                return 10;
            }
        } else if (attackType = "Ground") {
            if (defendType = "Fire") {
                return 20;
            } else if (defendType = "Rock") {
                return 20;
            } else if (defendType = "Poison") {
                return 20;
            } else if (defendType = "Electric") {
                return 20;
            } else if (defendType = "Grass") {
                return 5;
            } else if (defendType = "Flying") {
                return 0;
            } else {
                return 10;
            }
        } else if (attackType = "Normal") {
            if (defendType = "Rock") {
                return 5;
            } else {
                return 10;
            }
        } else if (attackType = "Fighting") {
            if (defendType = "Normal") {
                return 20;
            } else if (defendType = "Rock") {
                return 20;
            } else if (defendType = "Poison") {
                return 5;
            } else if (defendType = "Ice") {
                return 20;
            } else if (defendType = "Psychic") {
                return 5;
            } else if (defendType = "Flying") {
                return 5;
            } else {
                return 10;
            }
        } else if (attackType = "Flying") {
            if (defendType = "Fighting") {
                return 20;
            } else if (defendType = "Rock") {
                return 5;
            } else if (defendType = "Grass") {
                return 20;
            } else if (defendType = "Electric") {
                return 5;
            } else {
                return 10;
            }
        } else if (attackType = "Poison") {
            if (defendType = "Poison") {
                return 5;
            } else if (defendType = "Rock") {
                return 5;
            } else if (defendType = "Grass") {
                return 20;
            } else if (defendType = "Ground") {
                return 5;
            } else {
                return 10;
            }
        } else if (attackType = "Electric") {
            if (defendType = "Flying") {
                return 20;
            } else if (defendType = "Water") {
                return 20;
            } else if (defendType = "Grass") {
                return 5;
            } else if (defendType = "Electric") {
                return 5;
            } else if (defendType = "Ground") {
                return 0;
            } else {
                return 10;
            }
        } else if (attackType = "Psychic") {
            if (defendType = "Poison") {
                return 20;
            } else if (defendType = "Fighting") {
                return 20;
            } else if (defendType = "Psychic") {
                return 5;
            } else {
                return 10;
            }
        } else if (attackType = "Ice") {
            if (defendType = "Ice") {
                return 5;
            } else if (defendType = "Flying") {
                return 20;
            } else if (defendType = "Fire") {
                return 5;
            } else if (defendType = "Water") {
                return 5;
            } else if (defendType = "Grass") {
                return 20;
            } else if (defendType = "Ground") {
                return 20;
            } else {
                return 10;
            }
        } else {
            return 10;
        }
    }
}
